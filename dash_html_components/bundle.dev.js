window["dash_html_components"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/fbjs/lib/emptyFunction.js":
/*!************************************************!*\
  !*** ./node_modules/fbjs/lib/emptyFunction.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n//# sourceURL=webpack://dash_html_components/./node_modules/fbjs/lib/emptyFunction.js?");

/***/ }),

/***/ "./node_modules/fbjs/lib/invariant.js":
/*!********************************************!*\
  !*** ./node_modules/fbjs/lib/invariant.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (true) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n//# sourceURL=webpack://dash_html_components/./node_modules/fbjs/lib/invariant.js?");

/***/ }),

/***/ "./node_modules/fbjs/lib/warning.js":
/*!******************************************!*\
  !*** ./node_modules/fbjs/lib/warning.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyFunction = __webpack_require__(/*! ./emptyFunction */ \"./node_modules/fbjs/lib/emptyFunction.js\");\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (true) {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n\n//# sourceURL=webpack://dash_html_components/./node_modules/fbjs/lib/warning.js?");

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//# sourceURL=webpack://dash_html_components/./node_modules/object-assign/index.js?");

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  var invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"./node_modules/fbjs/lib/invariant.js\");\n  var warning = __webpack_require__(/*! fbjs/lib/warning */ \"./node_modules/fbjs/lib/warning.js\");\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n\n//# sourceURL=webpack://dash_html_components/./node_modules/prop-types/checkPropTypes.js?");

/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ \"./node_modules/fbjs/lib/emptyFunction.js\");\nvar invariant = __webpack_require__(/*! fbjs/lib/invariant */ \"./node_modules/fbjs/lib/invariant.js\");\nvar warning = __webpack_require__(/*! fbjs/lib/warning */ \"./node_modules/fbjs/lib/warning.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (\"development\" !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n       true ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : undefined;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(\n          false,\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n//# sourceURL=webpack://dash_html_components/./node_modules/prop-types/factoryWithTypeCheckers.js?");

/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (true) {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"./node_modules/prop-types/factoryWithTypeCheckers.js\")(isValidElement, throwOnDirectAccess);\n} else {}\n\n\n//# sourceURL=webpack://dash_html_components/./node_modules/prop-types/index.js?");

/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n//# sourceURL=webpack://dash_html_components/./node_modules/prop-types/lib/ReactPropTypesSecret.js?");

/***/ }),

/***/ "./src/components/A.react.js":
/*!***********************************!*\
  !*** ./src/components/A.react.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar A = function A(props) {\n    return _react2.default.createElement(\n        'a',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nA.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nA.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates that the hyperlink is to be used for downloading a resource.\r\n     */\n    'download': _propTypes2.default.string,\n\n    /**\r\n     * The URL of a linked resource.\r\n     */\n    'href': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the language of the linked resource.\r\n     */\n    'hrefLang': _propTypes2.default.string,\n\n    /**\r\n     * Specifies a hint of the media for which the linked resource was designed.\r\n     */\n    'media': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the relationship of the target object to the link object.\r\n     */\n    'rel': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'shape': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'target': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = A;\n\n//# sourceURL=webpack://dash_html_components/./src/components/A.react.js?");

/***/ }),

/***/ "./src/components/Abbr.react.js":
/*!**************************************!*\
  !*** ./src/components/Abbr.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Abbr = function Abbr(props) {\n    return _react2.default.createElement(\n        'abbr',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nAbbr.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nAbbr.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Abbr;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Abbr.react.js?");

/***/ }),

/***/ "./src/components/Acronym.react.js":
/*!*****************************************!*\
  !*** ./src/components/Acronym.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Acronym = function Acronym(props) {\n    return _react2.default.createElement(\n        'acronym',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nAcronym.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nAcronym.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Acronym;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Acronym.react.js?");

/***/ }),

/***/ "./src/components/Address.react.js":
/*!*****************************************!*\
  !*** ./src/components/Address.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Address = function Address(props) {\n    return _react2.default.createElement(\n        'address',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nAddress.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nAddress.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Address;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Address.react.js?");

/***/ }),

/***/ "./src/components/Area.react.js":
/*!**************************************!*\
  !*** ./src/components/Area.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Area = function Area(props) {\n    return _react2.default.createElement(\n        'area',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nArea.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nArea.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Alternative text in case an image can't be displayed.\r\n     */\n    'alt': _propTypes2.default.string,\n\n    /**\r\n     * A set of values specifying the coordinates of the hot-spot region.\r\n     */\n    'coords': _propTypes2.default.string,\n\n    /**\r\n     * Indicates that the hyperlink is to be used for downloading a resource.\r\n     */\n    'download': _propTypes2.default.string,\n\n    /**\r\n     * The URL of a linked resource.\r\n     */\n    'href': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the language of the linked resource.\r\n     */\n    'hrefLang': _propTypes2.default.string,\n\n    /**\r\n     * Specifies a hint of the media for which the linked resource was designed.\r\n     */\n    'media': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the relationship of the target object to the link object.\r\n     */\n    'rel': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'shape': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'target': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Area;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Area.react.js?");

/***/ }),

/***/ "./src/components/Article.react.js":
/*!*****************************************!*\
  !*** ./src/components/Article.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Article = function Article(props) {\n    return _react2.default.createElement(\n        'article',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nArticle.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nArticle.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Article;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Article.react.js?");

/***/ }),

/***/ "./src/components/Aside.react.js":
/*!***************************************!*\
  !*** ./src/components/Aside.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Aside = function Aside(props) {\n    return _react2.default.createElement(\n        'aside',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nAside.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nAside.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Aside;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Aside.react.js?");

/***/ }),

/***/ "./src/components/Audio.react.js":
/*!***************************************!*\
  !*** ./src/components/Audio.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Audio = function Audio(props) {\n    return _react2.default.createElement(\n        'audio',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nAudio.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nAudio.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * The audio or video should play as soon as possible.\r\n     */\n    'autoPlay': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the browser should show playback controls to the user.\r\n     */\n    'controls': _propTypes2.default.string,\n\n    /**\r\n     * How the element handles cross-origin requests\r\n     */\n    'crossOrigin': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the media should start playing from the start when it's finished.\r\n     */\n    'loop': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the audio will be initially silenced on page load.\r\n     */\n    'muted': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the whole resource, parts of it or nothing should be preloaded.\r\n     */\n    'preload': _propTypes2.default.string,\n\n    /**\r\n     * The URL of the embeddable content.\r\n     */\n    'src': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Audio;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Audio.react.js?");

/***/ }),

/***/ "./src/components/B.react.js":
/*!***********************************!*\
  !*** ./src/components/B.react.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar B = function B(props) {\n    return _react2.default.createElement(\n        'b',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nB.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nB.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = B;\n\n//# sourceURL=webpack://dash_html_components/./src/components/B.react.js?");

/***/ }),

/***/ "./src/components/Base.react.js":
/*!**************************************!*\
  !*** ./src/components/Base.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Base = function Base(props) {\n    return _react2.default.createElement(\n        'base',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nBase.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nBase.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * The URL of a linked resource.\r\n     */\n    'href': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'target': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Base;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Base.react.js?");

/***/ }),

/***/ "./src/components/Basefont.react.js":
/*!******************************************!*\
  !*** ./src/components/Basefont.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Basefont = function Basefont(props) {\n    return _react2.default.createElement(\n        'basefont',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nBasefont.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nBasefont.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Basefont;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Basefont.react.js?");

/***/ }),

/***/ "./src/components/Bdi.react.js":
/*!*************************************!*\
  !*** ./src/components/Bdi.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Bdi = function Bdi(props) {\n    return _react2.default.createElement(\n        'bdi',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nBdi.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nBdi.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Bdi;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Bdi.react.js?");

/***/ }),

/***/ "./src/components/Bdo.react.js":
/*!*************************************!*\
  !*** ./src/components/Bdo.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Bdo = function Bdo(props) {\n    return _react2.default.createElement(\n        'bdo',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nBdo.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nBdo.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Bdo;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Bdo.react.js?");

/***/ }),

/***/ "./src/components/Big.react.js":
/*!*************************************!*\
  !*** ./src/components/Big.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Big = function Big(props) {\n    return _react2.default.createElement(\n        'big',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nBig.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nBig.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Big;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Big.react.js?");

/***/ }),

/***/ "./src/components/Blink.react.js":
/*!***************************************!*\
  !*** ./src/components/Blink.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Blink = function Blink(props) {\n    return _react2.default.createElement(\n        'blink',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nBlink.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nBlink.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Blink;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Blink.react.js?");

/***/ }),

/***/ "./src/components/Blockquote.react.js":
/*!********************************************!*\
  !*** ./src/components/Blockquote.react.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Blockquote = function Blockquote(props) {\n    return _react2.default.createElement(\n        'blockquote',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nBlockquote.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nBlockquote.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Contains a URI which points to the source of the quote or change.\r\n     */\n    'cite': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Blockquote;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Blockquote.react.js?");

/***/ }),

/***/ "./src/components/Br.react.js":
/*!************************************!*\
  !*** ./src/components/Br.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Br = function Br(props) {\n    return _react2.default.createElement(\n        'br',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nBr.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nBr.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Br;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Br.react.js?");

/***/ }),

/***/ "./src/components/Button.react.js":
/*!****************************************!*\
  !*** ./src/components/Button.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Button = function Button(props) {\n    return _react2.default.createElement(\n        'button',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nButton.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nButton.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * The element should be automatically focused after the page loaded.\r\n     */\n    'autoFocus': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the user can interact with the element.\r\n     */\n    'disabled': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the form that is the owner of the element.\r\n     */\n    'form': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the action of the element, overriding the action defined in the <form>.\r\n     */\n    'formAction': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * Defines the type of the element.\r\n     */\n    'type': _propTypes2.default.string,\n\n    /**\r\n     * Defines a default value which will be displayed in the element on page load.\r\n     */\n    'value': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Button;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Button.react.js?");

/***/ }),

/***/ "./src/components/Canvas.react.js":
/*!****************************************!*\
  !*** ./src/components/Canvas.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Canvas = function Canvas(props) {\n    return _react2.default.createElement(\n        'canvas',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nCanvas.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nCanvas.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\r\n     */\n    'height': _propTypes2.default.string,\n\n    /**\r\n     * For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\r\n     */\n    'width': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Canvas;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Canvas.react.js?");

/***/ }),

/***/ "./src/components/Caption.react.js":
/*!*****************************************!*\
  !*** ./src/components/Caption.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Caption = function Caption(props) {\n    return _react2.default.createElement(\n        'caption',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nCaption.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nCaption.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Caption;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Caption.react.js?");

/***/ }),

/***/ "./src/components/Center.react.js":
/*!****************************************!*\
  !*** ./src/components/Center.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Center = function Center(props) {\n    return _react2.default.createElement(\n        'center',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nCenter.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nCenter.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Center;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Center.react.js?");

/***/ }),

/***/ "./src/components/Cite.react.js":
/*!**************************************!*\
  !*** ./src/components/Cite.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Cite = function Cite(props) {\n    return _react2.default.createElement(\n        'cite',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nCite.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nCite.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Cite;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Cite.react.js?");

/***/ }),

/***/ "./src/components/Code.react.js":
/*!**************************************!*\
  !*** ./src/components/Code.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Code = function Code(props) {\n    return _react2.default.createElement(\n        'code',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nCode.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nCode.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Code;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Code.react.js?");

/***/ }),

/***/ "./src/components/Col.react.js":
/*!*************************************!*\
  !*** ./src/components/Col.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Col = function Col(props) {\n    return _react2.default.createElement(\n        'col',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nCol.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nCol.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'span': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Col;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Col.react.js?");

/***/ }),

/***/ "./src/components/Colgroup.react.js":
/*!******************************************!*\
  !*** ./src/components/Colgroup.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Colgroup = function Colgroup(props) {\n    return _react2.default.createElement(\n        'colgroup',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nColgroup.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nColgroup.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'span': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Colgroup;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Colgroup.react.js?");

/***/ }),

/***/ "./src/components/Command.react.js":
/*!*****************************************!*\
  !*** ./src/components/Command.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Command = function Command(props) {\n    return _react2.default.createElement(\n        'command',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nCommand.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nCommand.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element should be checked on page load.\r\n     */\n    'checked': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the user can interact with the element.\r\n     */\n    'disabled': _propTypes2.default.string,\n\n    /**\r\n     * Specifies a picture which represents the command.\r\n     */\n    'icon': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'radioGroup': _propTypes2.default.string,\n\n    /**\r\n     * Defines the type of the element.\r\n     */\n    'type': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Command;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Command.react.js?");

/***/ }),

/***/ "./src/components/Content.react.js":
/*!*****************************************!*\
  !*** ./src/components/Content.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Content = function Content(props) {\n    return _react2.default.createElement(\n        'content',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nContent.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nContent.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Content;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Content.react.js?");

/***/ }),

/***/ "./src/components/Data.react.js":
/*!**************************************!*\
  !*** ./src/components/Data.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Data = function Data(props) {\n    return _react2.default.createElement(\n        'data',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nData.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nData.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Data;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Data.react.js?");

/***/ }),

/***/ "./src/components/Datalist.react.js":
/*!******************************************!*\
  !*** ./src/components/Datalist.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Datalist = function Datalist(props) {\n    return _react2.default.createElement(\n        'datalist',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nDatalist.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nDatalist.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Datalist;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Datalist.react.js?");

/***/ }),

/***/ "./src/components/Dd.react.js":
/*!************************************!*\
  !*** ./src/components/Dd.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Dd = function Dd(props) {\n    return _react2.default.createElement(\n        'dd',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nDd.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nDd.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Dd;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Dd.react.js?");

/***/ }),

/***/ "./src/components/Del.react.js":
/*!*************************************!*\
  !*** ./src/components/Del.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Del = function Del(props) {\n    return _react2.default.createElement(\n        'del',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nDel.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nDel.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Contains a URI which points to the source of the quote or change.\r\n     */\n    'cite': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the date and time associated with the element.\r\n     */\n    'dateTime': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Del;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Del.react.js?");

/***/ }),

/***/ "./src/components/Details.react.js":
/*!*****************************************!*\
  !*** ./src/components/Details.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Details = function Details(props) {\n    return _react2.default.createElement(\n        'details',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nDetails.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nDetails.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the details will be shown on page load.\r\n     */\n    'open': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Details;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Details.react.js?");

/***/ }),

/***/ "./src/components/Dfn.react.js":
/*!*************************************!*\
  !*** ./src/components/Dfn.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Dfn = function Dfn(props) {\n    return _react2.default.createElement(\n        'dfn',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nDfn.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nDfn.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Dfn;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Dfn.react.js?");

/***/ }),

/***/ "./src/components/Dialog.react.js":
/*!****************************************!*\
  !*** ./src/components/Dialog.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Dialog = function Dialog(props) {\n    return _react2.default.createElement(\n        'dialog',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nDialog.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nDialog.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Dialog;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Dialog.react.js?");

/***/ }),

/***/ "./src/components/Div.react.js":
/*!*************************************!*\
  !*** ./src/components/Div.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Div = function Div(props) {\n    return _react2.default.createElement(\n        'div',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nDiv.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nDiv.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Div;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Div.react.js?");

/***/ }),

/***/ "./src/components/Dl.react.js":
/*!************************************!*\
  !*** ./src/components/Dl.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Dl = function Dl(props) {\n    return _react2.default.createElement(\n        'dl',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nDl.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nDl.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Dl;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Dl.react.js?");

/***/ }),

/***/ "./src/components/Dt.react.js":
/*!************************************!*\
  !*** ./src/components/Dt.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Dt = function Dt(props) {\n    return _react2.default.createElement(\n        'dt',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nDt.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nDt.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Dt;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Dt.react.js?");

/***/ }),

/***/ "./src/components/Element.react.js":
/*!*****************************************!*\
  !*** ./src/components/Element.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Element = function Element(props) {\n    return _react2.default.createElement(\n        'element',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nElement.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nElement.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Element;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Element.react.js?");

/***/ }),

/***/ "./src/components/Em.react.js":
/*!************************************!*\
  !*** ./src/components/Em.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Em = function Em(props) {\n    return _react2.default.createElement(\n        'em',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nEm.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nEm.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Em;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Em.react.js?");

/***/ }),

/***/ "./src/components/Embed.react.js":
/*!***************************************!*\
  !*** ./src/components/Embed.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Embed = function Embed(props) {\n    return _react2.default.createElement(\n        'embed',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nEmbed.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nEmbed.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\r\n     */\n    'height': _propTypes2.default.string,\n\n    /**\r\n     * The URL of the embeddable content.\r\n     */\n    'src': _propTypes2.default.string,\n\n    /**\r\n     * Defines the type of the element.\r\n     */\n    'type': _propTypes2.default.string,\n\n    /**\r\n     * For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\r\n     */\n    'width': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Embed;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Embed.react.js?");

/***/ }),

/***/ "./src/components/Fieldset.react.js":
/*!******************************************!*\
  !*** ./src/components/Fieldset.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Fieldset = function Fieldset(props) {\n    return _react2.default.createElement(\n        'fieldset',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nFieldset.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nFieldset.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the user can interact with the element.\r\n     */\n    'disabled': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the form that is the owner of the element.\r\n     */\n    'form': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Fieldset;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Fieldset.react.js?");

/***/ }),

/***/ "./src/components/Figcaption.react.js":
/*!********************************************!*\
  !*** ./src/components/Figcaption.react.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Figcaption = function Figcaption(props) {\n    return _react2.default.createElement(\n        'figcaption',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nFigcaption.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nFigcaption.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Figcaption;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Figcaption.react.js?");

/***/ }),

/***/ "./src/components/Figure.react.js":
/*!****************************************!*\
  !*** ./src/components/Figure.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Figure = function Figure(props) {\n    return _react2.default.createElement(\n        'figure',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nFigure.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nFigure.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Figure;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Figure.react.js?");

/***/ }),

/***/ "./src/components/Font.react.js":
/*!**************************************!*\
  !*** ./src/components/Font.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Font = function Font(props) {\n    return _react2.default.createElement(\n        'font',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nFont.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nFont.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Font;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Font.react.js?");

/***/ }),

/***/ "./src/components/Footer.react.js":
/*!****************************************!*\
  !*** ./src/components/Footer.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Footer = function Footer(props) {\n    return _react2.default.createElement(\n        'footer',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nFooter.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nFooter.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Footer;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Footer.react.js?");

/***/ }),

/***/ "./src/components/Form.react.js":
/*!**************************************!*\
  !*** ./src/components/Form.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Form = function Form(props) {\n    return _react2.default.createElement(\n        'form',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nForm.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nForm.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * List of types the server accepts, typically a file type.\r\n     */\n    'accept': _propTypes2.default.string,\n\n    /**\r\n     * List of supported charsets.\r\n     */\n    'acceptCharset': _propTypes2.default.string,\n\n    /**\r\n     * The URI of a program that processes the information submitted via the form.\r\n     */\n    'action': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether controls in this form can by default have their values automatically completed by the browser.\r\n     */\n    'autoComplete': _propTypes2.default.string,\n\n    /**\r\n     * Defines the content type of the form date when the method is POST.\r\n     */\n    'encType': _propTypes2.default.string,\n\n    /**\r\n     * Defines which HTTP method to use when submitting the form. Can be GET (default) or POST.\r\n     */\n    'method': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * This attribute indicates that the form shouldn't be validated when submitted.\r\n     */\n    'noValidate': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'target': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Form;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Form.react.js?");

/***/ }),

/***/ "./src/components/Frame.react.js":
/*!***************************************!*\
  !*** ./src/components/Frame.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Frame = function Frame(props) {\n    return _react2.default.createElement(\n        'frame',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nFrame.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nFrame.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Frame;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Frame.react.js?");

/***/ }),

/***/ "./src/components/Frameset.react.js":
/*!******************************************!*\
  !*** ./src/components/Frameset.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Frameset = function Frameset(props) {\n    return _react2.default.createElement(\n        'frameset',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nFrameset.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nFrameset.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Frameset;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Frameset.react.js?");

/***/ }),

/***/ "./src/components/H1.react.js":
/*!************************************!*\
  !*** ./src/components/H1.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar H1 = function H1(props) {\n    return _react2.default.createElement(\n        'h1',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nH1.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nH1.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = H1;\n\n//# sourceURL=webpack://dash_html_components/./src/components/H1.react.js?");

/***/ }),

/***/ "./src/components/H2.react.js":
/*!************************************!*\
  !*** ./src/components/H2.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar H2 = function H2(props) {\n    return _react2.default.createElement(\n        'h2',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nH2.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nH2.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = H2;\n\n//# sourceURL=webpack://dash_html_components/./src/components/H2.react.js?");

/***/ }),

/***/ "./src/components/H3.react.js":
/*!************************************!*\
  !*** ./src/components/H3.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar H3 = function H3(props) {\n    return _react2.default.createElement(\n        'h3',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nH3.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nH3.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = H3;\n\n//# sourceURL=webpack://dash_html_components/./src/components/H3.react.js?");

/***/ }),

/***/ "./src/components/H4.react.js":
/*!************************************!*\
  !*** ./src/components/H4.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar H4 = function H4(props) {\n    return _react2.default.createElement(\n        'h4',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nH4.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nH4.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = H4;\n\n//# sourceURL=webpack://dash_html_components/./src/components/H4.react.js?");

/***/ }),

/***/ "./src/components/H5.react.js":
/*!************************************!*\
  !*** ./src/components/H5.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar H5 = function H5(props) {\n    return _react2.default.createElement(\n        'h5',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nH5.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nH5.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = H5;\n\n//# sourceURL=webpack://dash_html_components/./src/components/H5.react.js?");

/***/ }),

/***/ "./src/components/H6.react.js":
/*!************************************!*\
  !*** ./src/components/H6.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar H6 = function H6(props) {\n    return _react2.default.createElement(\n        'h6',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nH6.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nH6.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = H6;\n\n//# sourceURL=webpack://dash_html_components/./src/components/H6.react.js?");

/***/ }),

/***/ "./src/components/Header.react.js":
/*!****************************************!*\
  !*** ./src/components/Header.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Header = function Header(props) {\n    return _react2.default.createElement(\n        'header',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nHeader.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nHeader.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Header;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Header.react.js?");

/***/ }),

/***/ "./src/components/Hgroup.react.js":
/*!****************************************!*\
  !*** ./src/components/Hgroup.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Hgroup = function Hgroup(props) {\n    return _react2.default.createElement(\n        'hgroup',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nHgroup.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nHgroup.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Hgroup;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Hgroup.react.js?");

/***/ }),

/***/ "./src/components/Hr.react.js":
/*!************************************!*\
  !*** ./src/components/Hr.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Hr = function Hr(props) {\n    return _react2.default.createElement(\n        'hr',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nHr.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nHr.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Hr;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Hr.react.js?");

/***/ }),

/***/ "./src/components/I.react.js":
/*!***********************************!*\
  !*** ./src/components/I.react.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar I = function I(props) {\n    return _react2.default.createElement(\n        'i',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nI.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nI.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = I;\n\n//# sourceURL=webpack://dash_html_components/./src/components/I.react.js?");

/***/ }),

/***/ "./src/components/Iframe.react.js":
/*!****************************************!*\
  !*** ./src/components/Iframe.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Iframe = function Iframe(props) {\n    return _react2.default.createElement(\n        'iframe',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nIframe.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nIframe.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\r\n     */\n    'height': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows).\r\n     */\n    'sandbox': _propTypes2.default.string,\n\n    /**\r\n     * The URL of the embeddable content.\r\n     */\n    'src': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'srcDoc': _propTypes2.default.string,\n\n    /**\r\n     * For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\r\n     */\n    'width': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Iframe;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Iframe.react.js?");

/***/ }),

/***/ "./src/components/Img.react.js":
/*!*************************************!*\
  !*** ./src/components/Img.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Img = function Img(props) {\n    return _react2.default.createElement(\n        'img',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nImg.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nImg.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Alternative text in case an image can't be displayed.\r\n     */\n    'alt': _propTypes2.default.string,\n\n    /**\r\n     * How the element handles cross-origin requests\r\n     */\n    'crossOrigin': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\r\n     */\n    'height': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'sizes': _propTypes2.default.string,\n\n    /**\r\n     * The URL of the embeddable content.\r\n     */\n    'src': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'srcSet': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'useMap': _propTypes2.default.string,\n\n    /**\r\n     * For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\r\n     */\n    'width': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Img;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Img.react.js?");

/***/ }),

/***/ "./src/components/Ins.react.js":
/*!*************************************!*\
  !*** ./src/components/Ins.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Ins = function Ins(props) {\n    return _react2.default.createElement(\n        'ins',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nIns.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nIns.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Contains a URI which points to the source of the quote or change.\r\n     */\n    'cite': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the date and time associated with the element.\r\n     */\n    'dateTime': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Ins;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Ins.react.js?");

/***/ }),

/***/ "./src/components/Isindex.react.js":
/*!*****************************************!*\
  !*** ./src/components/Isindex.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Isindex = function Isindex(props) {\n    return _react2.default.createElement(\n        'isindex',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nIsindex.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nIsindex.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Isindex;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Isindex.react.js?");

/***/ }),

/***/ "./src/components/Kbd.react.js":
/*!*************************************!*\
  !*** ./src/components/Kbd.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Kbd = function Kbd(props) {\n    return _react2.default.createElement(\n        'kbd',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nKbd.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nKbd.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Kbd;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Kbd.react.js?");

/***/ }),

/***/ "./src/components/Keygen.react.js":
/*!****************************************!*\
  !*** ./src/components/Keygen.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Keygen = function Keygen(props) {\n    return _react2.default.createElement(\n        'keygen',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nKeygen.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nKeygen.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * The element should be automatically focused after the page loaded.\r\n     */\n    'autoFocus': _propTypes2.default.string,\n\n    /**\r\n     * A challenge string that is submitted along with the public key.\r\n     */\n    'challenge': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the user can interact with the element.\r\n     */\n    'disabled': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the form that is the owner of the element.\r\n     */\n    'form': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the type of key generated.\r\n     */\n    'keyType': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Keygen;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Keygen.react.js?");

/***/ }),

/***/ "./src/components/Label.react.js":
/*!***************************************!*\
  !*** ./src/components/Label.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Label = function Label(props) {\n    return _react2.default.createElement(\n        'label',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nLabel.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nLabel.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Describes elements which belongs to this one.\r\n     */\n    'htmlFor': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the form that is the owner of the element.\r\n     */\n    'form': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Label;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Label.react.js?");

/***/ }),

/***/ "./src/components/Legend.react.js":
/*!****************************************!*\
  !*** ./src/components/Legend.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Legend = function Legend(props) {\n    return _react2.default.createElement(\n        'legend',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nLegend.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nLegend.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Legend;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Legend.react.js?");

/***/ }),

/***/ "./src/components/Li.react.js":
/*!************************************!*\
  !*** ./src/components/Li.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Li = function Li(props) {\n    return _react2.default.createElement(\n        'li',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nLi.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nLi.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a default value which will be displayed in the element on page load.\r\n     */\n    'value': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Li;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Li.react.js?");

/***/ }),

/***/ "./src/components/Link.react.js":
/*!**************************************!*\
  !*** ./src/components/Link.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Link = function Link(props) {\n    return _react2.default.createElement(\n        'link',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nLink.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nLink.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * How the element handles cross-origin requests\r\n     */\n    'crossOrigin': _propTypes2.default.string,\n\n    /**\r\n     * The URL of a linked resource.\r\n     */\n    'href': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the language of the linked resource.\r\n     */\n    'hrefLang': _propTypes2.default.string,\n\n    /**\r\n     * Security Feature that allows browsers to verify what they fetch.     MDN Link\r\n     */\n    'integrity': _propTypes2.default.string,\n\n    /**\r\n     * Specifies a hint of the media for which the linked resource was designed.\r\n     */\n    'media': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the relationship of the target object to the link object.\r\n     */\n    'rel': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'sizes': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Link;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Link.react.js?");

/***/ }),

/***/ "./src/components/Listing.react.js":
/*!*****************************************!*\
  !*** ./src/components/Listing.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Listing = function Listing(props) {\n    return _react2.default.createElement(\n        'listing',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nListing.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nListing.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Listing;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Listing.react.js?");

/***/ }),

/***/ "./src/components/Main.react.js":
/*!**************************************!*\
  !*** ./src/components/Main.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Main = function Main(props) {\n    return _react2.default.createElement(\n        'main',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nMain.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nMain.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Main;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Main.react.js?");

/***/ }),

/***/ "./src/components/MapEl.react.js":
/*!***************************************!*\
  !*** ./src/components/MapEl.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MapEl = function MapEl(props) {\n    return _react2.default.createElement(\n        'map',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nMapEl.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nMapEl.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = MapEl;\n\n//# sourceURL=webpack://dash_html_components/./src/components/MapEl.react.js?");

/***/ }),

/***/ "./src/components/Mark.react.js":
/*!**************************************!*\
  !*** ./src/components/Mark.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Mark = function Mark(props) {\n    return _react2.default.createElement(\n        'mark',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nMark.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nMark.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Mark;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Mark.react.js?");

/***/ }),

/***/ "./src/components/Marquee.react.js":
/*!*****************************************!*\
  !*** ./src/components/Marquee.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Marquee = function Marquee(props) {\n    return _react2.default.createElement(\n        'marquee',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nMarquee.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nMarquee.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the media should start playing from the start when it's finished.\r\n     */\n    'loop': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Marquee;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Marquee.react.js?");

/***/ }),

/***/ "./src/components/Meta.react.js":
/*!**************************************!*\
  !*** ./src/components/Meta.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Meta = function Meta(props) {\n    return _react2.default.createElement(\n        'meta',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nMeta.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nMeta.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Declares the character encoding of the page or script.\r\n     */\n    'charSet': _propTypes2.default.string,\n\n    /**\r\n     * A value associated with http-equiv or name depending on the context.\r\n     */\n    'content': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'httpEquiv': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Meta;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Meta.react.js?");

/***/ }),

/***/ "./src/components/Meter.react.js":
/*!***************************************!*\
  !*** ./src/components/Meter.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Meter = function Meter(props) {\n    return _react2.default.createElement(\n        'meter',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nMeter.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nMeter.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the form that is the owner of the element.\r\n     */\n    'form': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the lower bound of the upper range.\r\n     */\n    'high': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the upper bound of the lower range.\r\n     */\n    'low': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the maximum value allowed.\r\n     */\n    'max': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the minimum value allowed.\r\n     */\n    'min': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the optimal numeric value.\r\n     */\n    'optimum': _propTypes2.default.string,\n\n    /**\r\n     * Defines a default value which will be displayed in the element on page load.\r\n     */\n    'value': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Meter;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Meter.react.js?");

/***/ }),

/***/ "./src/components/Multicol.react.js":
/*!******************************************!*\
  !*** ./src/components/Multicol.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Multicol = function Multicol(props) {\n    return _react2.default.createElement(\n        'multicol',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nMulticol.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nMulticol.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Multicol;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Multicol.react.js?");

/***/ }),

/***/ "./src/components/Nav.react.js":
/*!*************************************!*\
  !*** ./src/components/Nav.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Nav = function Nav(props) {\n    return _react2.default.createElement(\n        'nav',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nNav.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nNav.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Nav;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Nav.react.js?");

/***/ }),

/***/ "./src/components/Nextid.react.js":
/*!****************************************!*\
  !*** ./src/components/Nextid.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Nextid = function Nextid(props) {\n    return _react2.default.createElement(\n        'nextid',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nNextid.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nNextid.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Nextid;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Nextid.react.js?");

/***/ }),

/***/ "./src/components/Nobr.react.js":
/*!**************************************!*\
  !*** ./src/components/Nobr.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Nobr = function Nobr(props) {\n    return _react2.default.createElement(\n        'nobr',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nNobr.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nNobr.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Nobr;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Nobr.react.js?");

/***/ }),

/***/ "./src/components/Noscript.react.js":
/*!******************************************!*\
  !*** ./src/components/Noscript.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Noscript = function Noscript(props) {\n    return _react2.default.createElement(\n        'noscript',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nNoscript.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nNoscript.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Noscript;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Noscript.react.js?");

/***/ }),

/***/ "./src/components/ObjectEl.react.js":
/*!******************************************!*\
  !*** ./src/components/ObjectEl.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ObjectEl = function ObjectEl(props) {\n    return _react2.default.createElement(\n        'object',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nObjectEl.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nObjectEl.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the form that is the owner of the element.\r\n     */\n    'form': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\r\n     */\n    'height': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * Defines the type of the element.\r\n     */\n    'type': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'useMap': _propTypes2.default.string,\n\n    /**\r\n     * For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\r\n     */\n    'width': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = ObjectEl;\n\n//# sourceURL=webpack://dash_html_components/./src/components/ObjectEl.react.js?");

/***/ }),

/***/ "./src/components/Ol.react.js":
/*!************************************!*\
  !*** ./src/components/Ol.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Ol = function Ol(props) {\n    return _react2.default.createElement(\n        'ol',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nOl.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nOl.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the list should be displayed in a descending order instead of a ascending.\r\n     */\n    'reversed': _propTypes2.default.string,\n\n    /**\r\n     * Defines the first number if other than 1.\r\n     */\n    'start': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Ol;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Ol.react.js?");

/***/ }),

/***/ "./src/components/Optgroup.react.js":
/*!******************************************!*\
  !*** ./src/components/Optgroup.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Optgroup = function Optgroup(props) {\n    return _react2.default.createElement(\n        'optgroup',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nOptgroup.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nOptgroup.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the user can interact with the element.\r\n     */\n    'disabled': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Optgroup;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Optgroup.react.js?");

/***/ }),

/***/ "./src/components/Option.react.js":
/*!****************************************!*\
  !*** ./src/components/Option.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Option = function Option(props) {\n    return _react2.default.createElement(\n        'option',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nOption.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nOption.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the user can interact with the element.\r\n     */\n    'disabled': _propTypes2.default.string,\n\n    /**\r\n     * Defines a value which will be selected on page load.\r\n     */\n    'selected': _propTypes2.default.string,\n\n    /**\r\n     * Defines a default value which will be displayed in the element on page load.\r\n     */\n    'value': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Option;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Option.react.js?");

/***/ }),

/***/ "./src/components/Output.react.js":
/*!****************************************!*\
  !*** ./src/components/Output.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Output = function Output(props) {\n    return _react2.default.createElement(\n        'output',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nOutput.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nOutput.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Describes elements which belongs to this one.\r\n     */\n    'htmlFor': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the form that is the owner of the element.\r\n     */\n    'form': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Output;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Output.react.js?");

/***/ }),

/***/ "./src/components/P.react.js":
/*!***********************************!*\
  !*** ./src/components/P.react.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar P = function P(props) {\n    return _react2.default.createElement(\n        'p',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nP.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nP.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = P;\n\n//# sourceURL=webpack://dash_html_components/./src/components/P.react.js?");

/***/ }),

/***/ "./src/components/Param.react.js":
/*!***************************************!*\
  !*** ./src/components/Param.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Param = function Param(props) {\n    return _react2.default.createElement(\n        'param',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nParam.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nParam.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * Defines a default value which will be displayed in the element on page load.\r\n     */\n    'value': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Param;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Param.react.js?");

/***/ }),

/***/ "./src/components/Picture.react.js":
/*!*****************************************!*\
  !*** ./src/components/Picture.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Picture = function Picture(props) {\n    return _react2.default.createElement(\n        'picture',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nPicture.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nPicture.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Picture;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Picture.react.js?");

/***/ }),

/***/ "./src/components/Plaintext.react.js":
/*!*******************************************!*\
  !*** ./src/components/Plaintext.react.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Plaintext = function Plaintext(props) {\n    return _react2.default.createElement(\n        'plaintext',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nPlaintext.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nPlaintext.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Plaintext;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Plaintext.react.js?");

/***/ }),

/***/ "./src/components/Pre.react.js":
/*!*************************************!*\
  !*** ./src/components/Pre.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Pre = function Pre(props) {\n    return _react2.default.createElement(\n        'pre',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nPre.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nPre.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Pre;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Pre.react.js?");

/***/ }),

/***/ "./src/components/Progress.react.js":
/*!******************************************!*\
  !*** ./src/components/Progress.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Progress = function Progress(props) {\n    return _react2.default.createElement(\n        'progress',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nProgress.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nProgress.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the form that is the owner of the element.\r\n     */\n    'form': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the maximum value allowed.\r\n     */\n    'max': _propTypes2.default.string,\n\n    /**\r\n     * Defines a default value which will be displayed in the element on page load.\r\n     */\n    'value': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Progress;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Progress.react.js?");

/***/ }),

/***/ "./src/components/Q.react.js":
/*!***********************************!*\
  !*** ./src/components/Q.react.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Q = function Q(props) {\n    return _react2.default.createElement(\n        'q',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nQ.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nQ.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Contains a URI which points to the source of the quote or change.\r\n     */\n    'cite': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Q;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Q.react.js?");

/***/ }),

/***/ "./src/components/Rb.react.js":
/*!************************************!*\
  !*** ./src/components/Rb.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Rb = function Rb(props) {\n    return _react2.default.createElement(\n        'rb',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nRb.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nRb.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Rb;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Rb.react.js?");

/***/ }),

/***/ "./src/components/Rp.react.js":
/*!************************************!*\
  !*** ./src/components/Rp.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Rp = function Rp(props) {\n    return _react2.default.createElement(\n        'rp',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nRp.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nRp.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Rp;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Rp.react.js?");

/***/ }),

/***/ "./src/components/Rt.react.js":
/*!************************************!*\
  !*** ./src/components/Rt.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Rt = function Rt(props) {\n    return _react2.default.createElement(\n        'rt',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nRt.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nRt.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Rt;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Rt.react.js?");

/***/ }),

/***/ "./src/components/Rtc.react.js":
/*!*************************************!*\
  !*** ./src/components/Rtc.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Rtc = function Rtc(props) {\n    return _react2.default.createElement(\n        'rtc',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nRtc.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nRtc.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Rtc;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Rtc.react.js?");

/***/ }),

/***/ "./src/components/Ruby.react.js":
/*!**************************************!*\
  !*** ./src/components/Ruby.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Ruby = function Ruby(props) {\n    return _react2.default.createElement(\n        'ruby',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nRuby.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nRuby.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Ruby;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Ruby.react.js?");

/***/ }),

/***/ "./src/components/S.react.js":
/*!***********************************!*\
  !*** ./src/components/S.react.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar S = function S(props) {\n    return _react2.default.createElement(\n        's',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nS.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nS.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = S;\n\n//# sourceURL=webpack://dash_html_components/./src/components/S.react.js?");

/***/ }),

/***/ "./src/components/Samp.react.js":
/*!**************************************!*\
  !*** ./src/components/Samp.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Samp = function Samp(props) {\n    return _react2.default.createElement(\n        'samp',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nSamp.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nSamp.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Samp;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Samp.react.js?");

/***/ }),

/***/ "./src/components/Script.react.js":
/*!****************************************!*\
  !*** ./src/components/Script.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Script = function Script(props) {\n    return _react2.default.createElement(\n        'script',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nScript.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nScript.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates that the script should be executed asynchronously.\r\n     */\n    'async': _propTypes2.default.string,\n\n    /**\r\n     * Declares the character encoding of the page or script.\r\n     */\n    'charSet': _propTypes2.default.string,\n\n    /**\r\n     * How the element handles cross-origin requests\r\n     */\n    'crossOrigin': _propTypes2.default.string,\n\n    /**\r\n     * Indicates that the script should be executed after the page has been parsed.\r\n     */\n    'defer': _propTypes2.default.string,\n\n    /**\r\n     * Security Feature that allows browsers to verify what they fetch.     MDN Link\r\n     */\n    'integrity': _propTypes2.default.string,\n\n    /**\r\n     * The URL of the embeddable content.\r\n     */\n    'src': _propTypes2.default.string,\n\n    /**\r\n     * Defines the type of the element.\r\n     */\n    'type': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Script;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Script.react.js?");

/***/ }),

/***/ "./src/components/Section.react.js":
/*!*****************************************!*\
  !*** ./src/components/Section.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Section = function Section(props) {\n    return _react2.default.createElement(\n        'section',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nSection.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nSection.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Section;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Section.react.js?");

/***/ }),

/***/ "./src/components/Select.react.js":
/*!****************************************!*\
  !*** ./src/components/Select.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Select = function Select(props) {\n    return _react2.default.createElement(\n        'select',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nSelect.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nSelect.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * The element should be automatically focused after the page loaded.\r\n     */\n    'autoFocus': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the user can interact with the element.\r\n     */\n    'disabled': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the form that is the owner of the element.\r\n     */\n    'form': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether multiple values can be entered in an input of the type email or file.\r\n     */\n    'multiple': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether this element is required to fill out or not.\r\n     */\n    'required': _propTypes2.default.string,\n\n    /**\r\n     * Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters.\r\n     */\n    'size': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Select;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Select.react.js?");

/***/ }),

/***/ "./src/components/Shadow.react.js":
/*!****************************************!*\
  !*** ./src/components/Shadow.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Shadow = function Shadow(props) {\n    return _react2.default.createElement(\n        'shadow',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nShadow.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nShadow.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Shadow;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Shadow.react.js?");

/***/ }),

/***/ "./src/components/Slot.react.js":
/*!**************************************!*\
  !*** ./src/components/Slot.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Slot = function Slot(props) {\n    return _react2.default.createElement(\n        'slot',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nSlot.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nSlot.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Slot;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Slot.react.js?");

/***/ }),

/***/ "./src/components/Small.react.js":
/*!***************************************!*\
  !*** ./src/components/Small.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Small = function Small(props) {\n    return _react2.default.createElement(\n        'small',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nSmall.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nSmall.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Small;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Small.react.js?");

/***/ }),

/***/ "./src/components/Source.react.js":
/*!****************************************!*\
  !*** ./src/components/Source.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Source = function Source(props) {\n    return _react2.default.createElement(\n        'source',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nSource.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nSource.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Specifies a hint of the media for which the linked resource was designed.\r\n     */\n    'media': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'sizes': _propTypes2.default.string,\n\n    /**\r\n     * The URL of the embeddable content.\r\n     */\n    'src': _propTypes2.default.string,\n\n    /**\r\n     * Defines the type of the element.\r\n     */\n    'type': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Source;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Source.react.js?");

/***/ }),

/***/ "./src/components/Spacer.react.js":
/*!****************************************!*\
  !*** ./src/components/Spacer.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Spacer = function Spacer(props) {\n    return _react2.default.createElement(\n        'spacer',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nSpacer.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nSpacer.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Spacer;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Spacer.react.js?");

/***/ }),

/***/ "./src/components/Span.react.js":
/*!**************************************!*\
  !*** ./src/components/Span.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Span = function Span(props) {\n    return _react2.default.createElement(\n        'span',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nSpan.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nSpan.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Span;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Span.react.js?");

/***/ }),

/***/ "./src/components/Strike.react.js":
/*!****************************************!*\
  !*** ./src/components/Strike.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Strike = function Strike(props) {\n    return _react2.default.createElement(\n        'strike',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nStrike.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nStrike.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Strike;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Strike.react.js?");

/***/ }),

/***/ "./src/components/Strong.react.js":
/*!****************************************!*\
  !*** ./src/components/Strong.react.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Strong = function Strong(props) {\n    return _react2.default.createElement(\n        'strong',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nStrong.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nStrong.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Strong;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Strong.react.js?");

/***/ }),

/***/ "./src/components/Sub.react.js":
/*!*************************************!*\
  !*** ./src/components/Sub.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Sub = function Sub(props) {\n    return _react2.default.createElement(\n        'sub',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nSub.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nSub.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Sub;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Sub.react.js?");

/***/ }),

/***/ "./src/components/Summary.react.js":
/*!*****************************************!*\
  !*** ./src/components/Summary.react.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Summary = function Summary(props) {\n    return _react2.default.createElement(\n        'summary',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nSummary.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nSummary.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Summary;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Summary.react.js?");

/***/ }),

/***/ "./src/components/Sup.react.js":
/*!*************************************!*\
  !*** ./src/components/Sup.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Sup = function Sup(props) {\n    return _react2.default.createElement(\n        'sup',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nSup.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nSup.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Sup;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Sup.react.js?");

/***/ }),

/***/ "./src/components/Table.react.js":
/*!***************************************!*\
  !*** ./src/components/Table.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Table = function Table(props) {\n    return _react2.default.createElement(\n        'table',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nTable.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nTable.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'summary': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Table;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Table.react.js?");

/***/ }),

/***/ "./src/components/Tbody.react.js":
/*!***************************************!*\
  !*** ./src/components/Tbody.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Tbody = function Tbody(props) {\n    return _react2.default.createElement(\n        'tbody',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nTbody.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nTbody.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Tbody;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Tbody.react.js?");

/***/ }),

/***/ "./src/components/Td.react.js":
/*!************************************!*\
  !*** ./src/components/Td.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Td = function Td(props) {\n    return _react2.default.createElement(\n        'td',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nTd.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nTd.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * The colspan attribute defines the number of columns a cell should span.\r\n     */\n    'colSpan': _propTypes2.default.string,\n\n    /**\r\n     * IDs of the <th> elements which applies to this element.\r\n     */\n    'headers': _propTypes2.default.string,\n\n    /**\r\n     * Defines the number of rows a table cell should span over.\r\n     */\n    'rowSpan': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Td;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Td.react.js?");

/***/ }),

/***/ "./src/components/Template.react.js":
/*!******************************************!*\
  !*** ./src/components/Template.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Template = function Template(props) {\n    return _react2.default.createElement(\n        'template',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nTemplate.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nTemplate.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Template;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Template.react.js?");

/***/ }),

/***/ "./src/components/Textarea.react.js":
/*!******************************************!*\
  !*** ./src/components/Textarea.react.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Textarea = function Textarea(props) {\n    return _react2.default.createElement(\n        'textarea',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nTextarea.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nTextarea.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether controls in this form can by default have their values automatically completed by the browser.\r\n     */\n    'autoComplete': _propTypes2.default.string,\n\n    /**\r\n     * The element should be automatically focused after the page loaded.\r\n     */\n    'autoFocus': _propTypes2.default.string,\n\n    /**\r\n     * Defines the number of columns in a textarea.\r\n     */\n    'cols': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the user can interact with the element.\r\n     */\n    'disabled': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the form that is the owner of the element.\r\n     */\n    'form': _propTypes2.default.string,\n\n    /**\r\n     * Defines the maximum number of characters allowed in the element.\r\n     */\n    'maxLength': _propTypes2.default.string,\n\n    /**\r\n     * Defines the minimum number of characters allowed in the element.\r\n     */\n    'minLength': _propTypes2.default.string,\n\n    /**\r\n     * Name of the element. For example used by the server to identify the fields in form submits.\r\n     */\n    'name': _propTypes2.default.string,\n\n    /**\r\n     * Provides a hint to the user of what can be entered in the field.\r\n     */\n    'placeholder': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element can be edited.\r\n     */\n    'readOnly': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether this element is required to fill out or not.\r\n     */\n    'required': _propTypes2.default.string,\n\n    /**\r\n     * Defines the number of rows in a text area.\r\n     */\n    'rows': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the text should be wrapped.\r\n     */\n    'wrap': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Textarea;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Textarea.react.js?");

/***/ }),

/***/ "./src/components/Tfoot.react.js":
/*!***************************************!*\
  !*** ./src/components/Tfoot.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Tfoot = function Tfoot(props) {\n    return _react2.default.createElement(\n        'tfoot',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nTfoot.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nTfoot.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Tfoot;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Tfoot.react.js?");

/***/ }),

/***/ "./src/components/Th.react.js":
/*!************************************!*\
  !*** ./src/components/Th.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Th = function Th(props) {\n    return _react2.default.createElement(\n        'th',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nTh.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nTh.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * The colspan attribute defines the number of columns a cell should span.\r\n     */\n    'colSpan': _propTypes2.default.string,\n\n    /**\r\n     * IDs of the <th> elements which applies to this element.\r\n     */\n    'headers': _propTypes2.default.string,\n\n    /**\r\n     * Defines the number of rows a table cell should span over.\r\n     */\n    'rowSpan': _propTypes2.default.string,\n\n    /**\r\n     * Defines the cells that the header test (defined in the th element) relates to.\r\n     */\n    'scope': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Th;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Th.react.js?");

/***/ }),

/***/ "./src/components/Thead.react.js":
/*!***************************************!*\
  !*** ./src/components/Thead.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Thead = function Thead(props) {\n    return _react2.default.createElement(\n        'thead',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nThead.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nThead.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Thead;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Thead.react.js?");

/***/ }),

/***/ "./src/components/Time.react.js":
/*!**************************************!*\
  !*** ./src/components/Time.react.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Time = function Time(props) {\n    return _react2.default.createElement(\n        'time',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nTime.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nTime.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates the date and time associated with the element.\r\n     */\n    'dateTime': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Time;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Time.react.js?");

/***/ }),

/***/ "./src/components/Title.react.js":
/*!***************************************!*\
  !*** ./src/components/Title.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Title = function Title(props) {\n    return _react2.default.createElement(\n        'title',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nTitle.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nTitle.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Title;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Title.react.js?");

/***/ }),

/***/ "./src/components/Tr.react.js":
/*!************************************!*\
  !*** ./src/components/Tr.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Tr = function Tr(props) {\n    return _react2.default.createElement(\n        'tr',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nTr.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nTr.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Tr;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Tr.react.js?");

/***/ }),

/***/ "./src/components/Track.react.js":
/*!***************************************!*\
  !*** ./src/components/Track.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Track = function Track(props) {\n    return _react2.default.createElement(\n        'track',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nTrack.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nTrack.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Indicates that the track should be enabled unless the user's preferences indicate something different.\r\n     */\n    'default': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the kind of text track.\r\n     */\n    'kind': _propTypes2.default.string,\n\n    /**\r\n     * Specifies a user-readable title of the text track.\r\n     */\n    'label': _propTypes2.default.string,\n\n    /**\r\n     * The URL of the embeddable content.\r\n     */\n    'src': _propTypes2.default.string,\n\n    /**\r\n     *\r\n     */\n    'srcLang': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Track;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Track.react.js?");

/***/ }),

/***/ "./src/components/U.react.js":
/*!***********************************!*\
  !*** ./src/components/U.react.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar U = function U(props) {\n    return _react2.default.createElement(\n        'u',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nU.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nU.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = U;\n\n//# sourceURL=webpack://dash_html_components/./src/components/U.react.js?");

/***/ }),

/***/ "./src/components/Ul.react.js":
/*!************************************!*\
  !*** ./src/components/Ul.react.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Ul = function Ul(props) {\n    return _react2.default.createElement(\n        'ul',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nUl.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nUl.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Ul;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Ul.react.js?");

/***/ }),

/***/ "./src/components/Var.react.js":
/*!*************************************!*\
  !*** ./src/components/Var.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Var = function Var(props) {\n    return _react2.default.createElement(\n        'var',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nVar.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nVar.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Var;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Var.react.js?");

/***/ }),

/***/ "./src/components/Video.react.js":
/*!***************************************!*\
  !*** ./src/components/Video.react.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Video = function Video(props) {\n    return _react2.default.createElement(\n        'video',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nVideo.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nVideo.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * The audio or video should play as soon as possible.\r\n     */\n    'autoPlay': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the browser should show playback controls to the user.\r\n     */\n    'controls': _propTypes2.default.string,\n\n    /**\r\n     * How the element handles cross-origin requests\r\n     */\n    'crossOrigin': _propTypes2.default.string,\n\n    /**\r\n     * Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.\r\n     */\n    'height': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the media should start playing from the start when it's finished.\r\n     */\n    'loop': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the audio will be initially silenced on page load.\r\n     */\n    'muted': _propTypes2.default.string,\n\n    /**\r\n     * A URL indicating a poster frame to show until the user plays or seeks.\r\n     */\n    'poster': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the whole resource, parts of it or nothing should be preloaded.\r\n     */\n    'preload': _propTypes2.default.string,\n\n    /**\r\n     * The URL of the embeddable content.\r\n     */\n    'src': _propTypes2.default.string,\n\n    /**\r\n     * For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.\r\n     */\n    'width': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Video;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Video.react.js?");

/***/ }),

/***/ "./src/components/Wbr.react.js":
/*!*************************************!*\
  !*** ./src/components/Wbr.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Wbr = function Wbr(props) {\n    return _react2.default.createElement(\n        'wbr',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nWbr.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nWbr.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Wbr;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Wbr.react.js?");

/***/ }),

/***/ "./src/components/Xmp.react.js":
/*!*************************************!*\
  !*** ./src/components/Xmp.react.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Xmp = function Xmp(props) {\n    return _react2.default.createElement(\n        'xmp',\n        _extends({\n            onClick: function onClick() {\n                if (props.setProps) {\n                    props.setProps({\n                        n_clicks: props.n_clicks + 1,\n                        n_clicks_timestamp: Date.now()\n                    });\n                }\n                if (props.fireEvent) props.fireEvent({ event: 'click' });\n            }\n        }, props),\n        props.children\n    );\n};\n\nXmp.defaultProps = {\n    n_clicks: 0,\n    n_clicks_timestamp: -1\n};\n\nXmp.propTypes = {\n    /**\r\n     * The ID of this component, used to identify dash components\r\n     * in callbacks. The ID needs to be unique across all of the\r\n     * components in an app.\r\n     */\n    'id': _propTypes2.default.string,\n\n    /**\r\n     * The children of this component\r\n     */\n    'children': _propTypes2.default.node,\n\n    /**\r\n     * An integer that represents the number of times\r\n     * that this element has been clicked on.\r\n     */\n    'n_clicks': _propTypes2.default.integer,\n\n    /**\r\n     * An integer that represents the time (in ms since 1970)\r\n     * at which n_clicks changed. This can be used to tell\r\n     * which button was changed most recently.\r\n     */\n    'n_clicks_timestamp': _propTypes2.default.integer,\n\n    /**\r\n     * A unique identifier for the component, used to improve\r\n     * performance by React.js while rendering components\r\n     * See https://reactjs.org/docs/lists-and-keys.html for more info\r\n     */\n    'key': _propTypes2.default.string,\n\n    /**\r\n     * The ARIA role attribute\r\n     */\n    'role': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard data attribute\r\n     */\n    'data-*': _propTypes2.default.string,\n\n    /**\r\n     * A wildcard aria attribute\r\n     */\n    'aria-*': _propTypes2.default.string,\n\n    /**\r\n     * Defines a keyboard shortcut to activate or add focus to the element.\r\n     */\n    'accessKey': _propTypes2.default.string,\n\n    /**\r\n     * Often used with CSS to style elements with common properties.\r\n     */\n    'className': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether the element's content is editable.\r\n     */\n    'contentEditable': _propTypes2.default.string,\n\n    /**\r\n     * Defines the ID of a <menu> element which will serve as the element's context menu.\r\n     */\n    'contextMenu': _propTypes2.default.string,\n\n    /**\r\n     * Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)\r\n     */\n    'dir': _propTypes2.default.string,\n\n    /**\r\n     * Defines whether the element can be dragged.\r\n     */\n    'draggable': _propTypes2.default.string,\n\n    /**\r\n     * Prevents rendering of given element, while keeping child elements, e.g. script elements, active.\r\n     */\n    'hidden': _propTypes2.default.string,\n\n    /**\r\n     * Defines the language used in the element.\r\n     */\n    'lang': _propTypes2.default.string,\n\n    /**\r\n     * Indicates whether spell checking is allowed for the element.\r\n     */\n    'spellCheck': _propTypes2.default.string,\n\n    /**\r\n     * Defines CSS styles which will override styles previously set.\r\n     */\n    'style': _propTypes2.default.object,\n\n    /**\r\n     * Overrides the browser's default tab order and follows the one specified instead.\r\n     */\n    'tabIndex': _propTypes2.default.string,\n\n    /**\r\n     * Text to be displayed in a tooltip when hovering over the element.\r\n     */\n    'title': _propTypes2.default.string,\n\n    /**\r\n     * A callback for firing events to dash.\r\n     */\n    'fireEvent': _propTypes2.default.func,\n\n    'dashEvents': _propTypes2.default.oneOf(['click'])\n\n};\n\nexports.default = Xmp;\n\n//# sourceURL=webpack://dash_html_components/./src/components/Xmp.react.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Xmp = exports.Wbr = exports.Video = exports.Var = exports.Ul = exports.U = exports.Track = exports.Tr = exports.Title = exports.Time = exports.Thead = exports.Th = exports.Tfoot = exports.Textarea = exports.Template = exports.Td = exports.Tbody = exports.Table = exports.Sup = exports.Summary = exports.Sub = exports.Strong = exports.Strike = exports.Span = exports.Spacer = exports.Source = exports.Small = exports.Slot = exports.Shadow = exports.Select = exports.Section = undefined;\nexports.Script = exports.Samp = exports.S = exports.Ruby = exports.Rtc = exports.Rt = exports.Rp = exports.Rb = exports.Q = exports.Progress = exports.Pre = exports.Plaintext = exports.Picture = exports.Param = exports.P = exports.Output = exports.Option = exports.Optgroup = exports.Ol = exports.ObjectEl = exports.Noscript = exports.Nobr = exports.Nextid = exports.Nav = exports.Multicol = exports.Meter = exports.Meta = exports.Marquee = exports.Mark = exports.MapEl = exports.Main = exports.Listing = exports.Link = exports.Li = exports.Legend = exports.Label = exports.Keygen = exports.Kbd = exports.Isindex = exports.Ins = exports.Img = exports.Iframe = exports.I = exports.Hr = exports.Hgroup = exports.Header = exports.H6 = exports.H5 = exports.H4 = exports.H3 = exports.H2 = exports.H1 = exports.Frameset = exports.Frame = exports.Form = exports.Footer = exports.Font = exports.Figure = exports.Figcaption = exports.Fieldset = exports.Embed = exports.Em = exports.Element = exports.Dt = exports.Dl = exports.Div = exports.Dialog = exports.Dfn = exports.Details = exports.Del = exports.Dd = exports.Datalist = exports.Data = exports.Content = exports.Command = exports.Colgroup = exports.Col = exports.Code = exports.Cite = exports.Center = exports.Caption = exports.Canvas = exports.Button = exports.Br = exports.Blockquote = exports.Blink = exports.Big = exports.Bdo = exports.Bdi = exports.Basefont = exports.Base = exports.B = exports.Audio = exports.Aside = exports.Article = exports.Area = exports.Address = exports.Acronym = exports.Abbr = exports.A = undefined;\n\nvar _A = __webpack_require__(/*! ./components/A.react */ \"./src/components/A.react.js\");\n\nvar _A2 = _interopRequireDefault(_A);\n\nvar _Abbr = __webpack_require__(/*! ./components/Abbr.react */ \"./src/components/Abbr.react.js\");\n\nvar _Abbr2 = _interopRequireDefault(_Abbr);\n\nvar _Acronym = __webpack_require__(/*! ./components/Acronym.react */ \"./src/components/Acronym.react.js\");\n\nvar _Acronym2 = _interopRequireDefault(_Acronym);\n\nvar _Address = __webpack_require__(/*! ./components/Address.react */ \"./src/components/Address.react.js\");\n\nvar _Address2 = _interopRequireDefault(_Address);\n\nvar _Area = __webpack_require__(/*! ./components/Area.react */ \"./src/components/Area.react.js\");\n\nvar _Area2 = _interopRequireDefault(_Area);\n\nvar _Article = __webpack_require__(/*! ./components/Article.react */ \"./src/components/Article.react.js\");\n\nvar _Article2 = _interopRequireDefault(_Article);\n\nvar _Aside = __webpack_require__(/*! ./components/Aside.react */ \"./src/components/Aside.react.js\");\n\nvar _Aside2 = _interopRequireDefault(_Aside);\n\nvar _Audio = __webpack_require__(/*! ./components/Audio.react */ \"./src/components/Audio.react.js\");\n\nvar _Audio2 = _interopRequireDefault(_Audio);\n\nvar _B = __webpack_require__(/*! ./components/B.react */ \"./src/components/B.react.js\");\n\nvar _B2 = _interopRequireDefault(_B);\n\nvar _Base = __webpack_require__(/*! ./components/Base.react */ \"./src/components/Base.react.js\");\n\nvar _Base2 = _interopRequireDefault(_Base);\n\nvar _Basefont = __webpack_require__(/*! ./components/Basefont.react */ \"./src/components/Basefont.react.js\");\n\nvar _Basefont2 = _interopRequireDefault(_Basefont);\n\nvar _Bdi = __webpack_require__(/*! ./components/Bdi.react */ \"./src/components/Bdi.react.js\");\n\nvar _Bdi2 = _interopRequireDefault(_Bdi);\n\nvar _Bdo = __webpack_require__(/*! ./components/Bdo.react */ \"./src/components/Bdo.react.js\");\n\nvar _Bdo2 = _interopRequireDefault(_Bdo);\n\nvar _Big = __webpack_require__(/*! ./components/Big.react */ \"./src/components/Big.react.js\");\n\nvar _Big2 = _interopRequireDefault(_Big);\n\nvar _Blink = __webpack_require__(/*! ./components/Blink.react */ \"./src/components/Blink.react.js\");\n\nvar _Blink2 = _interopRequireDefault(_Blink);\n\nvar _Blockquote = __webpack_require__(/*! ./components/Blockquote.react */ \"./src/components/Blockquote.react.js\");\n\nvar _Blockquote2 = _interopRequireDefault(_Blockquote);\n\nvar _Br = __webpack_require__(/*! ./components/Br.react */ \"./src/components/Br.react.js\");\n\nvar _Br2 = _interopRequireDefault(_Br);\n\nvar _Button = __webpack_require__(/*! ./components/Button.react */ \"./src/components/Button.react.js\");\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Canvas = __webpack_require__(/*! ./components/Canvas.react */ \"./src/components/Canvas.react.js\");\n\nvar _Canvas2 = _interopRequireDefault(_Canvas);\n\nvar _Caption = __webpack_require__(/*! ./components/Caption.react */ \"./src/components/Caption.react.js\");\n\nvar _Caption2 = _interopRequireDefault(_Caption);\n\nvar _Center = __webpack_require__(/*! ./components/Center.react */ \"./src/components/Center.react.js\");\n\nvar _Center2 = _interopRequireDefault(_Center);\n\nvar _Cite = __webpack_require__(/*! ./components/Cite.react */ \"./src/components/Cite.react.js\");\n\nvar _Cite2 = _interopRequireDefault(_Cite);\n\nvar _Code = __webpack_require__(/*! ./components/Code.react */ \"./src/components/Code.react.js\");\n\nvar _Code2 = _interopRequireDefault(_Code);\n\nvar _Col = __webpack_require__(/*! ./components/Col.react */ \"./src/components/Col.react.js\");\n\nvar _Col2 = _interopRequireDefault(_Col);\n\nvar _Colgroup = __webpack_require__(/*! ./components/Colgroup.react */ \"./src/components/Colgroup.react.js\");\n\nvar _Colgroup2 = _interopRequireDefault(_Colgroup);\n\nvar _Command = __webpack_require__(/*! ./components/Command.react */ \"./src/components/Command.react.js\");\n\nvar _Command2 = _interopRequireDefault(_Command);\n\nvar _Content = __webpack_require__(/*! ./components/Content.react */ \"./src/components/Content.react.js\");\n\nvar _Content2 = _interopRequireDefault(_Content);\n\nvar _Data = __webpack_require__(/*! ./components/Data.react */ \"./src/components/Data.react.js\");\n\nvar _Data2 = _interopRequireDefault(_Data);\n\nvar _Datalist = __webpack_require__(/*! ./components/Datalist.react */ \"./src/components/Datalist.react.js\");\n\nvar _Datalist2 = _interopRequireDefault(_Datalist);\n\nvar _Dd = __webpack_require__(/*! ./components/Dd.react */ \"./src/components/Dd.react.js\");\n\nvar _Dd2 = _interopRequireDefault(_Dd);\n\nvar _Del = __webpack_require__(/*! ./components/Del.react */ \"./src/components/Del.react.js\");\n\nvar _Del2 = _interopRequireDefault(_Del);\n\nvar _Details = __webpack_require__(/*! ./components/Details.react */ \"./src/components/Details.react.js\");\n\nvar _Details2 = _interopRequireDefault(_Details);\n\nvar _Dfn = __webpack_require__(/*! ./components/Dfn.react */ \"./src/components/Dfn.react.js\");\n\nvar _Dfn2 = _interopRequireDefault(_Dfn);\n\nvar _Dialog = __webpack_require__(/*! ./components/Dialog.react */ \"./src/components/Dialog.react.js\");\n\nvar _Dialog2 = _interopRequireDefault(_Dialog);\n\nvar _Div = __webpack_require__(/*! ./components/Div.react */ \"./src/components/Div.react.js\");\n\nvar _Div2 = _interopRequireDefault(_Div);\n\nvar _Dl = __webpack_require__(/*! ./components/Dl.react */ \"./src/components/Dl.react.js\");\n\nvar _Dl2 = _interopRequireDefault(_Dl);\n\nvar _Dt = __webpack_require__(/*! ./components/Dt.react */ \"./src/components/Dt.react.js\");\n\nvar _Dt2 = _interopRequireDefault(_Dt);\n\nvar _Element = __webpack_require__(/*! ./components/Element.react */ \"./src/components/Element.react.js\");\n\nvar _Element2 = _interopRequireDefault(_Element);\n\nvar _Em = __webpack_require__(/*! ./components/Em.react */ \"./src/components/Em.react.js\");\n\nvar _Em2 = _interopRequireDefault(_Em);\n\nvar _Embed = __webpack_require__(/*! ./components/Embed.react */ \"./src/components/Embed.react.js\");\n\nvar _Embed2 = _interopRequireDefault(_Embed);\n\nvar _Fieldset = __webpack_require__(/*! ./components/Fieldset.react */ \"./src/components/Fieldset.react.js\");\n\nvar _Fieldset2 = _interopRequireDefault(_Fieldset);\n\nvar _Figcaption = __webpack_require__(/*! ./components/Figcaption.react */ \"./src/components/Figcaption.react.js\");\n\nvar _Figcaption2 = _interopRequireDefault(_Figcaption);\n\nvar _Figure = __webpack_require__(/*! ./components/Figure.react */ \"./src/components/Figure.react.js\");\n\nvar _Figure2 = _interopRequireDefault(_Figure);\n\nvar _Font = __webpack_require__(/*! ./components/Font.react */ \"./src/components/Font.react.js\");\n\nvar _Font2 = _interopRequireDefault(_Font);\n\nvar _Footer = __webpack_require__(/*! ./components/Footer.react */ \"./src/components/Footer.react.js\");\n\nvar _Footer2 = _interopRequireDefault(_Footer);\n\nvar _Form = __webpack_require__(/*! ./components/Form.react */ \"./src/components/Form.react.js\");\n\nvar _Form2 = _interopRequireDefault(_Form);\n\nvar _Frame = __webpack_require__(/*! ./components/Frame.react */ \"./src/components/Frame.react.js\");\n\nvar _Frame2 = _interopRequireDefault(_Frame);\n\nvar _Frameset = __webpack_require__(/*! ./components/Frameset.react */ \"./src/components/Frameset.react.js\");\n\nvar _Frameset2 = _interopRequireDefault(_Frameset);\n\nvar _H = __webpack_require__(/*! ./components/H1.react */ \"./src/components/H1.react.js\");\n\nvar _H2 = _interopRequireDefault(_H);\n\nvar _H3 = __webpack_require__(/*! ./components/H2.react */ \"./src/components/H2.react.js\");\n\nvar _H4 = _interopRequireDefault(_H3);\n\nvar _H5 = __webpack_require__(/*! ./components/H3.react */ \"./src/components/H3.react.js\");\n\nvar _H6 = _interopRequireDefault(_H5);\n\nvar _H7 = __webpack_require__(/*! ./components/H4.react */ \"./src/components/H4.react.js\");\n\nvar _H8 = _interopRequireDefault(_H7);\n\nvar _H9 = __webpack_require__(/*! ./components/H5.react */ \"./src/components/H5.react.js\");\n\nvar _H10 = _interopRequireDefault(_H9);\n\nvar _H11 = __webpack_require__(/*! ./components/H6.react */ \"./src/components/H6.react.js\");\n\nvar _H12 = _interopRequireDefault(_H11);\n\nvar _Header = __webpack_require__(/*! ./components/Header.react */ \"./src/components/Header.react.js\");\n\nvar _Header2 = _interopRequireDefault(_Header);\n\nvar _Hgroup = __webpack_require__(/*! ./components/Hgroup.react */ \"./src/components/Hgroup.react.js\");\n\nvar _Hgroup2 = _interopRequireDefault(_Hgroup);\n\nvar _Hr = __webpack_require__(/*! ./components/Hr.react */ \"./src/components/Hr.react.js\");\n\nvar _Hr2 = _interopRequireDefault(_Hr);\n\nvar _I = __webpack_require__(/*! ./components/I.react */ \"./src/components/I.react.js\");\n\nvar _I2 = _interopRequireDefault(_I);\n\nvar _Iframe = __webpack_require__(/*! ./components/Iframe.react */ \"./src/components/Iframe.react.js\");\n\nvar _Iframe2 = _interopRequireDefault(_Iframe);\n\nvar _Img = __webpack_require__(/*! ./components/Img.react */ \"./src/components/Img.react.js\");\n\nvar _Img2 = _interopRequireDefault(_Img);\n\nvar _Ins = __webpack_require__(/*! ./components/Ins.react */ \"./src/components/Ins.react.js\");\n\nvar _Ins2 = _interopRequireDefault(_Ins);\n\nvar _Isindex = __webpack_require__(/*! ./components/Isindex.react */ \"./src/components/Isindex.react.js\");\n\nvar _Isindex2 = _interopRequireDefault(_Isindex);\n\nvar _Kbd = __webpack_require__(/*! ./components/Kbd.react */ \"./src/components/Kbd.react.js\");\n\nvar _Kbd2 = _interopRequireDefault(_Kbd);\n\nvar _Keygen = __webpack_require__(/*! ./components/Keygen.react */ \"./src/components/Keygen.react.js\");\n\nvar _Keygen2 = _interopRequireDefault(_Keygen);\n\nvar _Label = __webpack_require__(/*! ./components/Label.react */ \"./src/components/Label.react.js\");\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nvar _Legend = __webpack_require__(/*! ./components/Legend.react */ \"./src/components/Legend.react.js\");\n\nvar _Legend2 = _interopRequireDefault(_Legend);\n\nvar _Li = __webpack_require__(/*! ./components/Li.react */ \"./src/components/Li.react.js\");\n\nvar _Li2 = _interopRequireDefault(_Li);\n\nvar _Link = __webpack_require__(/*! ./components/Link.react */ \"./src/components/Link.react.js\");\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nvar _Listing = __webpack_require__(/*! ./components/Listing.react */ \"./src/components/Listing.react.js\");\n\nvar _Listing2 = _interopRequireDefault(_Listing);\n\nvar _Main = __webpack_require__(/*! ./components/Main.react */ \"./src/components/Main.react.js\");\n\nvar _Main2 = _interopRequireDefault(_Main);\n\nvar _MapEl = __webpack_require__(/*! ./components/MapEl.react */ \"./src/components/MapEl.react.js\");\n\nvar _MapEl2 = _interopRequireDefault(_MapEl);\n\nvar _Mark = __webpack_require__(/*! ./components/Mark.react */ \"./src/components/Mark.react.js\");\n\nvar _Mark2 = _interopRequireDefault(_Mark);\n\nvar _Marquee = __webpack_require__(/*! ./components/Marquee.react */ \"./src/components/Marquee.react.js\");\n\nvar _Marquee2 = _interopRequireDefault(_Marquee);\n\nvar _Meta = __webpack_require__(/*! ./components/Meta.react */ \"./src/components/Meta.react.js\");\n\nvar _Meta2 = _interopRequireDefault(_Meta);\n\nvar _Meter = __webpack_require__(/*! ./components/Meter.react */ \"./src/components/Meter.react.js\");\n\nvar _Meter2 = _interopRequireDefault(_Meter);\n\nvar _Multicol = __webpack_require__(/*! ./components/Multicol.react */ \"./src/components/Multicol.react.js\");\n\nvar _Multicol2 = _interopRequireDefault(_Multicol);\n\nvar _Nav = __webpack_require__(/*! ./components/Nav.react */ \"./src/components/Nav.react.js\");\n\nvar _Nav2 = _interopRequireDefault(_Nav);\n\nvar _Nextid = __webpack_require__(/*! ./components/Nextid.react */ \"./src/components/Nextid.react.js\");\n\nvar _Nextid2 = _interopRequireDefault(_Nextid);\n\nvar _Nobr = __webpack_require__(/*! ./components/Nobr.react */ \"./src/components/Nobr.react.js\");\n\nvar _Nobr2 = _interopRequireDefault(_Nobr);\n\nvar _Noscript = __webpack_require__(/*! ./components/Noscript.react */ \"./src/components/Noscript.react.js\");\n\nvar _Noscript2 = _interopRequireDefault(_Noscript);\n\nvar _ObjectEl = __webpack_require__(/*! ./components/ObjectEl.react */ \"./src/components/ObjectEl.react.js\");\n\nvar _ObjectEl2 = _interopRequireDefault(_ObjectEl);\n\nvar _Ol = __webpack_require__(/*! ./components/Ol.react */ \"./src/components/Ol.react.js\");\n\nvar _Ol2 = _interopRequireDefault(_Ol);\n\nvar _Optgroup = __webpack_require__(/*! ./components/Optgroup.react */ \"./src/components/Optgroup.react.js\");\n\nvar _Optgroup2 = _interopRequireDefault(_Optgroup);\n\nvar _Option = __webpack_require__(/*! ./components/Option.react */ \"./src/components/Option.react.js\");\n\nvar _Option2 = _interopRequireDefault(_Option);\n\nvar _Output = __webpack_require__(/*! ./components/Output.react */ \"./src/components/Output.react.js\");\n\nvar _Output2 = _interopRequireDefault(_Output);\n\nvar _P = __webpack_require__(/*! ./components/P.react */ \"./src/components/P.react.js\");\n\nvar _P2 = _interopRequireDefault(_P);\n\nvar _Param = __webpack_require__(/*! ./components/Param.react */ \"./src/components/Param.react.js\");\n\nvar _Param2 = _interopRequireDefault(_Param);\n\nvar _Picture = __webpack_require__(/*! ./components/Picture.react */ \"./src/components/Picture.react.js\");\n\nvar _Picture2 = _interopRequireDefault(_Picture);\n\nvar _Plaintext = __webpack_require__(/*! ./components/Plaintext.react */ \"./src/components/Plaintext.react.js\");\n\nvar _Plaintext2 = _interopRequireDefault(_Plaintext);\n\nvar _Pre = __webpack_require__(/*! ./components/Pre.react */ \"./src/components/Pre.react.js\");\n\nvar _Pre2 = _interopRequireDefault(_Pre);\n\nvar _Progress = __webpack_require__(/*! ./components/Progress.react */ \"./src/components/Progress.react.js\");\n\nvar _Progress2 = _interopRequireDefault(_Progress);\n\nvar _Q = __webpack_require__(/*! ./components/Q.react */ \"./src/components/Q.react.js\");\n\nvar _Q2 = _interopRequireDefault(_Q);\n\nvar _Rb = __webpack_require__(/*! ./components/Rb.react */ \"./src/components/Rb.react.js\");\n\nvar _Rb2 = _interopRequireDefault(_Rb);\n\nvar _Rp = __webpack_require__(/*! ./components/Rp.react */ \"./src/components/Rp.react.js\");\n\nvar _Rp2 = _interopRequireDefault(_Rp);\n\nvar _Rt = __webpack_require__(/*! ./components/Rt.react */ \"./src/components/Rt.react.js\");\n\nvar _Rt2 = _interopRequireDefault(_Rt);\n\nvar _Rtc = __webpack_require__(/*! ./components/Rtc.react */ \"./src/components/Rtc.react.js\");\n\nvar _Rtc2 = _interopRequireDefault(_Rtc);\n\nvar _Ruby = __webpack_require__(/*! ./components/Ruby.react */ \"./src/components/Ruby.react.js\");\n\nvar _Ruby2 = _interopRequireDefault(_Ruby);\n\nvar _S = __webpack_require__(/*! ./components/S.react */ \"./src/components/S.react.js\");\n\nvar _S2 = _interopRequireDefault(_S);\n\nvar _Samp = __webpack_require__(/*! ./components/Samp.react */ \"./src/components/Samp.react.js\");\n\nvar _Samp2 = _interopRequireDefault(_Samp);\n\nvar _Script = __webpack_require__(/*! ./components/Script.react */ \"./src/components/Script.react.js\");\n\nvar _Script2 = _interopRequireDefault(_Script);\n\nvar _Section = __webpack_require__(/*! ./components/Section.react */ \"./src/components/Section.react.js\");\n\nvar _Section2 = _interopRequireDefault(_Section);\n\nvar _Select = __webpack_require__(/*! ./components/Select.react */ \"./src/components/Select.react.js\");\n\nvar _Select2 = _interopRequireDefault(_Select);\n\nvar _Shadow = __webpack_require__(/*! ./components/Shadow.react */ \"./src/components/Shadow.react.js\");\n\nvar _Shadow2 = _interopRequireDefault(_Shadow);\n\nvar _Slot = __webpack_require__(/*! ./components/Slot.react */ \"./src/components/Slot.react.js\");\n\nvar _Slot2 = _interopRequireDefault(_Slot);\n\nvar _Small = __webpack_require__(/*! ./components/Small.react */ \"./src/components/Small.react.js\");\n\nvar _Small2 = _interopRequireDefault(_Small);\n\nvar _Source = __webpack_require__(/*! ./components/Source.react */ \"./src/components/Source.react.js\");\n\nvar _Source2 = _interopRequireDefault(_Source);\n\nvar _Spacer = __webpack_require__(/*! ./components/Spacer.react */ \"./src/components/Spacer.react.js\");\n\nvar _Spacer2 = _interopRequireDefault(_Spacer);\n\nvar _Span = __webpack_require__(/*! ./components/Span.react */ \"./src/components/Span.react.js\");\n\nvar _Span2 = _interopRequireDefault(_Span);\n\nvar _Strike = __webpack_require__(/*! ./components/Strike.react */ \"./src/components/Strike.react.js\");\n\nvar _Strike2 = _interopRequireDefault(_Strike);\n\nvar _Strong = __webpack_require__(/*! ./components/Strong.react */ \"./src/components/Strong.react.js\");\n\nvar _Strong2 = _interopRequireDefault(_Strong);\n\nvar _Sub = __webpack_require__(/*! ./components/Sub.react */ \"./src/components/Sub.react.js\");\n\nvar _Sub2 = _interopRequireDefault(_Sub);\n\nvar _Summary = __webpack_require__(/*! ./components/Summary.react */ \"./src/components/Summary.react.js\");\n\nvar _Summary2 = _interopRequireDefault(_Summary);\n\nvar _Sup = __webpack_require__(/*! ./components/Sup.react */ \"./src/components/Sup.react.js\");\n\nvar _Sup2 = _interopRequireDefault(_Sup);\n\nvar _Table = __webpack_require__(/*! ./components/Table.react */ \"./src/components/Table.react.js\");\n\nvar _Table2 = _interopRequireDefault(_Table);\n\nvar _Tbody = __webpack_require__(/*! ./components/Tbody.react */ \"./src/components/Tbody.react.js\");\n\nvar _Tbody2 = _interopRequireDefault(_Tbody);\n\nvar _Td = __webpack_require__(/*! ./components/Td.react */ \"./src/components/Td.react.js\");\n\nvar _Td2 = _interopRequireDefault(_Td);\n\nvar _Template = __webpack_require__(/*! ./components/Template.react */ \"./src/components/Template.react.js\");\n\nvar _Template2 = _interopRequireDefault(_Template);\n\nvar _Textarea = __webpack_require__(/*! ./components/Textarea.react */ \"./src/components/Textarea.react.js\");\n\nvar _Textarea2 = _interopRequireDefault(_Textarea);\n\nvar _Tfoot = __webpack_require__(/*! ./components/Tfoot.react */ \"./src/components/Tfoot.react.js\");\n\nvar _Tfoot2 = _interopRequireDefault(_Tfoot);\n\nvar _Th = __webpack_require__(/*! ./components/Th.react */ \"./src/components/Th.react.js\");\n\nvar _Th2 = _interopRequireDefault(_Th);\n\nvar _Thead = __webpack_require__(/*! ./components/Thead.react */ \"./src/components/Thead.react.js\");\n\nvar _Thead2 = _interopRequireDefault(_Thead);\n\nvar _Time = __webpack_require__(/*! ./components/Time.react */ \"./src/components/Time.react.js\");\n\nvar _Time2 = _interopRequireDefault(_Time);\n\nvar _Title = __webpack_require__(/*! ./components/Title.react */ \"./src/components/Title.react.js\");\n\nvar _Title2 = _interopRequireDefault(_Title);\n\nvar _Tr = __webpack_require__(/*! ./components/Tr.react */ \"./src/components/Tr.react.js\");\n\nvar _Tr2 = _interopRequireDefault(_Tr);\n\nvar _Track = __webpack_require__(/*! ./components/Track.react */ \"./src/components/Track.react.js\");\n\nvar _Track2 = _interopRequireDefault(_Track);\n\nvar _U = __webpack_require__(/*! ./components/U.react */ \"./src/components/U.react.js\");\n\nvar _U2 = _interopRequireDefault(_U);\n\nvar _Ul = __webpack_require__(/*! ./components/Ul.react */ \"./src/components/Ul.react.js\");\n\nvar _Ul2 = _interopRequireDefault(_Ul);\n\nvar _Var = __webpack_require__(/*! ./components/Var.react */ \"./src/components/Var.react.js\");\n\nvar _Var2 = _interopRequireDefault(_Var);\n\nvar _Video = __webpack_require__(/*! ./components/Video.react */ \"./src/components/Video.react.js\");\n\nvar _Video2 = _interopRequireDefault(_Video);\n\nvar _Wbr = __webpack_require__(/*! ./components/Wbr.react */ \"./src/components/Wbr.react.js\");\n\nvar _Wbr2 = _interopRequireDefault(_Wbr);\n\nvar _Xmp = __webpack_require__(/*! ./components/Xmp.react */ \"./src/components/Xmp.react.js\");\n\nvar _Xmp2 = _interopRequireDefault(_Xmp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.A = _A2.default;\nexports.Abbr = _Abbr2.default;\nexports.Acronym = _Acronym2.default;\nexports.Address = _Address2.default;\nexports.Area = _Area2.default;\nexports.Article = _Article2.default;\nexports.Aside = _Aside2.default;\nexports.Audio = _Audio2.default;\nexports.B = _B2.default;\nexports.Base = _Base2.default;\nexports.Basefont = _Basefont2.default;\nexports.Bdi = _Bdi2.default;\nexports.Bdo = _Bdo2.default;\nexports.Big = _Big2.default;\nexports.Blink = _Blink2.default;\nexports.Blockquote = _Blockquote2.default;\nexports.Br = _Br2.default;\nexports.Button = _Button2.default;\nexports.Canvas = _Canvas2.default;\nexports.Caption = _Caption2.default;\nexports.Center = _Center2.default;\nexports.Cite = _Cite2.default;\nexports.Code = _Code2.default;\nexports.Col = _Col2.default;\nexports.Colgroup = _Colgroup2.default;\nexports.Command = _Command2.default;\nexports.Content = _Content2.default;\nexports.Data = _Data2.default;\nexports.Datalist = _Datalist2.default;\nexports.Dd = _Dd2.default;\nexports.Del = _Del2.default;\nexports.Details = _Details2.default;\nexports.Dfn = _Dfn2.default;\nexports.Dialog = _Dialog2.default;\nexports.Div = _Div2.default;\nexports.Dl = _Dl2.default;\nexports.Dt = _Dt2.default;\nexports.Element = _Element2.default;\nexports.Em = _Em2.default;\nexports.Embed = _Embed2.default;\nexports.Fieldset = _Fieldset2.default;\nexports.Figcaption = _Figcaption2.default;\nexports.Figure = _Figure2.default;\nexports.Font = _Font2.default;\nexports.Footer = _Footer2.default;\nexports.Form = _Form2.default;\nexports.Frame = _Frame2.default;\nexports.Frameset = _Frameset2.default;\nexports.H1 = _H2.default;\nexports.H2 = _H4.default;\nexports.H3 = _H6.default;\nexports.H4 = _H8.default;\nexports.H5 = _H10.default;\nexports.H6 = _H12.default;\nexports.Header = _Header2.default;\nexports.Hgroup = _Hgroup2.default;\nexports.Hr = _Hr2.default;\nexports.I = _I2.default;\nexports.Iframe = _Iframe2.default;\nexports.Img = _Img2.default;\nexports.Ins = _Ins2.default;\nexports.Isindex = _Isindex2.default;\nexports.Kbd = _Kbd2.default;\nexports.Keygen = _Keygen2.default;\nexports.Label = _Label2.default;\nexports.Legend = _Legend2.default;\nexports.Li = _Li2.default;\nexports.Link = _Link2.default;\nexports.Listing = _Listing2.default;\nexports.Main = _Main2.default;\nexports.MapEl = _MapEl2.default;\nexports.Mark = _Mark2.default;\nexports.Marquee = _Marquee2.default;\nexports.Meta = _Meta2.default;\nexports.Meter = _Meter2.default;\nexports.Multicol = _Multicol2.default;\nexports.Nav = _Nav2.default;\nexports.Nextid = _Nextid2.default;\nexports.Nobr = _Nobr2.default;\nexports.Noscript = _Noscript2.default;\nexports.ObjectEl = _ObjectEl2.default;\nexports.Ol = _Ol2.default;\nexports.Optgroup = _Optgroup2.default;\nexports.Option = _Option2.default;\nexports.Output = _Output2.default;\nexports.P = _P2.default;\nexports.Param = _Param2.default;\nexports.Picture = _Picture2.default;\nexports.Plaintext = _Plaintext2.default;\nexports.Pre = _Pre2.default;\nexports.Progress = _Progress2.default;\nexports.Q = _Q2.default;\nexports.Rb = _Rb2.default;\nexports.Rp = _Rp2.default;\nexports.Rt = _Rt2.default;\nexports.Rtc = _Rtc2.default;\nexports.Ruby = _Ruby2.default;\nexports.S = _S2.default;\nexports.Samp = _Samp2.default;\nexports.Script = _Script2.default;\nexports.Section = _Section2.default;\nexports.Select = _Select2.default;\nexports.Shadow = _Shadow2.default;\nexports.Slot = _Slot2.default;\nexports.Small = _Small2.default;\nexports.Source = _Source2.default;\nexports.Spacer = _Spacer2.default;\nexports.Span = _Span2.default;\nexports.Strike = _Strike2.default;\nexports.Strong = _Strong2.default;\nexports.Sub = _Sub2.default;\nexports.Summary = _Summary2.default;\nexports.Sup = _Sup2.default;\nexports.Table = _Table2.default;\nexports.Tbody = _Tbody2.default;\nexports.Td = _Td2.default;\nexports.Template = _Template2.default;\nexports.Textarea = _Textarea2.default;\nexports.Tfoot = _Tfoot2.default;\nexports.Th = _Th2.default;\nexports.Thead = _Thead2.default;\nexports.Time = _Time2.default;\nexports.Title = _Title2.default;\nexports.Tr = _Tr2.default;\nexports.Track = _Track2.default;\nexports.U = _U2.default;\nexports.Ul = _Ul2.default;\nexports.Var = _Var2.default;\nexports.Video = _Video2.default;\nexports.Wbr = _Wbr2.default;\nexports.Xmp = _Xmp2.default;\n\n//# sourceURL=webpack://dash_html_components/./src/index.js?");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() { module.exports = window[\"React\"]; }());\n\n//# sourceURL=webpack://dash_html_components/external_%22React%22?");

/***/ })

/******/ });